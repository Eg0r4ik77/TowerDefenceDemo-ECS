//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AdjustTransformWithSpawnPoint = 0;
    public const int Destroyed = 1;
    public const int Id = 2;
    public const int Rigidbody = 3;
    public const int SelfDestroyTimer = 4;
    public const int SpawnPoint = 5;
    public const int Transform = 6;
    public const int View = 7;
    public const int ViewPrefab = 8;
    public const int WorldPosition = 9;
    public const int Cooldown = 10;
    public const int CooldownLeft = 11;
    public const int CooldownUp = 12;
    public const int Damage = 13;
    public const int DamageEffect = 14;
    public const int EffectTargetId = 15;
    public const int EffectValue = 16;
    public const int Enemy = 17;
    public const int EnemySpawnTimer = 18;
    public const int Dead = 19;
    public const int Health = 20;
    public const int MaxHealth = 21;
    public const int Direction = 22;
    public const int FinishedPath = 23;
    public const int MovementByRigidbody = 24;
    public const int MovementToTransform = 25;
    public const int Moving = 26;
    public const int ParabolicMovement = 27;
    public const int ReachDistance = 28;
    public const int Rotation = 29;
    public const int RotationSpeed = 30;
    public const int Speed = 31;
    public const int TargetPosition = 32;
    public const int TargetRotationPosition = 33;
    public const int CannonProjectile = 34;
    public const int DistanceBeforeDeparture = 35;
    public const int FollowingTarget = 36;
    public const int Layer = 37;
    public const int NeedForDetection = 38;
    public const int ReadyForDetection = 39;
    public const int TargetDetectionDistance = 40;
    public const int TargetDetectionInterval = 41;
    public const int TargetDetectionLayerMask = 42;
    public const int TargetDetectionTimer = 43;
    public const int TargetId = 44;
    public const int AngleShot = 45;
    public const int AttackSpawnPoint = 46;
    public const int CannonTower = 47;
    public const int DeparturePoint = 48;
    public const int Prediction = 49;
    public const int RotationDelay = 50;
    public const int SimpleTower = 51;
    public const int StartProjectileSpeed = 52;
    public const int EntityViewPoolType = 53;

    public const int TotalComponents = 54;

    public static readonly string[] componentNames = {
        "AdjustTransformWithSpawnPoint",
        "Destroyed",
        "Id",
        "Rigidbody",
        "SelfDestroyTimer",
        "SpawnPoint",
        "Transform",
        "View",
        "ViewPrefab",
        "WorldPosition",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "Damage",
        "DamageEffect",
        "EffectTargetId",
        "EffectValue",
        "Enemy",
        "EnemySpawnTimer",
        "Dead",
        "Health",
        "MaxHealth",
        "Direction",
        "FinishedPath",
        "MovementByRigidbody",
        "MovementToTransform",
        "Moving",
        "ParabolicMovement",
        "ReachDistance",
        "Rotation",
        "RotationSpeed",
        "Speed",
        "TargetPosition",
        "TargetRotationPosition",
        "CannonProjectile",
        "DistanceBeforeDeparture",
        "FollowingTarget",
        "Layer",
        "NeedForDetection",
        "ReadyForDetection",
        "TargetDetectionDistance",
        "TargetDetectionInterval",
        "TargetDetectionLayerMask",
        "TargetDetectionTimer",
        "TargetId",
        "AngleShot",
        "AttackSpawnPoint",
        "CannonTower",
        "DeparturePoint",
        "Prediction",
        "RotationDelay",
        "SimpleTower",
        "StartProjectileSpeed",
        "EntityViewPoolType"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Common.AdjustTransformWithSpawnPoint),
        typeof(Common.Destroyed),
        typeof(Common.Id),
        typeof(Common.RigidbodyComponent),
        typeof(Common.SelfDestroyTimer),
        typeof(Common.SpawnPoint),
        typeof(Common.TransformComponent),
        typeof(Common.View),
        typeof(Common.ViewPrefab),
        typeof(Common.WorldPosition),
        typeof(Gameplay.Cooldowns.Cooldown),
        typeof(Gameplay.Cooldowns.CooldownLeft),
        typeof(Gameplay.Cooldowns.CooldownUp),
        typeof(Gameplay.Effects.Damage),
        typeof(Gameplay.Effects.DamageEffect),
        typeof(Gameplay.Effects.EffectTargetId),
        typeof(Gameplay.Effects.EffectValue),
        typeof(Gameplay.Enemies.Enemy),
        typeof(Gameplay.Enemies.EnemySpawnTimer),
        typeof(Gameplay.Lifetime.Dead),
        typeof(Gameplay.Lifetime.Health),
        typeof(Gameplay.Lifetime.MaxHealth),
        typeof(Gameplay.Movement.Direction),
        typeof(Gameplay.Movement.FinishedPath),
        typeof(Gameplay.Movement.MovementByRigidbody),
        typeof(Gameplay.Movement.MovementToTransform),
        typeof(Gameplay.Movement.Moving),
        typeof(Gameplay.Movement.ParabolicMovement),
        typeof(Gameplay.Movement.ReachDistance),
        typeof(Gameplay.Movement.Rotation),
        typeof(Gameplay.Movement.RotationSpeed),
        typeof(Gameplay.Movement.Speed),
        typeof(Gameplay.Movement.TargetPosition),
        typeof(Gameplay.Movement.TargetRotationPosition),
        typeof(Gameplay.Projectiles.CannonProjectile),
        typeof(Gameplay.Projectiles.DistanceBeforeDeparture),
        typeof(Gameplay.TargetDetection.FollowingTarget),
        typeof(Gameplay.TargetDetection.Layer),
        typeof(Gameplay.TargetDetection.NeedForDetection),
        typeof(Gameplay.TargetDetection.ReadyForDetection),
        typeof(Gameplay.TargetDetection.TargetDetectionDistance),
        typeof(Gameplay.TargetDetection.TargetDetectionInterval),
        typeof(Gameplay.TargetDetection.TargetDetectionLayerMask),
        typeof(Gameplay.TargetDetection.TargetDetectionTimer),
        typeof(Gameplay.TargetDetection.TargetId),
        typeof(Gameplay.Towers.AngleShot),
        typeof(Gameplay.Towers.AttackSpawnPoint),
        typeof(Gameplay.Towers.CannonTowerComponent),
        typeof(Gameplay.Towers.DeparturePoint),
        typeof(Gameplay.Towers.PredictionComponent),
        typeof(Gameplay.Towers.RotationDelay),
        typeof(Gameplay.Towers.SimpleTowerComponent),
        typeof(Gameplay.Towers.StartProjectileSpeed),
        typeof(Infrastructure.View.EntityViewComponents.EntityViewPoolTypeComponent)
    };
}
