//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemySpawnTimer;

    public static Entitas.IMatcher<GameEntity> EnemySpawnTimer {
        get {
            if (_matcherEnemySpawnTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemySpawnTimer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemySpawnTimer = matcher;
            }

            return _matcherEnemySpawnTimer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Enemies.EnemySpawnTimer enemySpawnTimer { get { return (Code.Gameplay.Enemies.EnemySpawnTimer)GetComponent(GameComponentsLookup.EnemySpawnTimer); } }
    public float EnemySpawnTimer { get { return enemySpawnTimer.Value; } }
    public bool hasEnemySpawnTimer { get { return HasComponent(GameComponentsLookup.EnemySpawnTimer); } }

    public GameEntity AddEnemySpawnTimer(float newValue) {
        var index = GameComponentsLookup.EnemySpawnTimer;
        var component = (Code.Gameplay.Enemies.EnemySpawnTimer)CreateComponent(index, typeof(Code.Gameplay.Enemies.EnemySpawnTimer));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnemySpawnTimer(float newValue) {
        var index = GameComponentsLookup.EnemySpawnTimer;
        var component = (Code.Gameplay.Enemies.EnemySpawnTimer)CreateComponent(index, typeof(Code.Gameplay.Enemies.EnemySpawnTimer));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnemySpawnTimer() {
        RemoveComponent(GameComponentsLookup.EnemySpawnTimer);
        return this;
    }
}
