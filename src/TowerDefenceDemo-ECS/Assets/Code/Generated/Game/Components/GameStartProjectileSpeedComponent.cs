//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStartProjectileSpeed;

    public static Entitas.IMatcher<GameEntity> StartProjectileSpeed {
        get {
            if (_matcherStartProjectileSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StartProjectileSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStartProjectileSpeed = matcher;
            }

            return _matcherStartProjectileSpeed;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Towers.StartProjectileSpeed startProjectileSpeed { get { return (Code.Gameplay.Towers.StartProjectileSpeed)GetComponent(GameComponentsLookup.StartProjectileSpeed); } }
    public float StartProjectileSpeed { get { return startProjectileSpeed.Value; } }
    public bool hasStartProjectileSpeed { get { return HasComponent(GameComponentsLookup.StartProjectileSpeed); } }

    public GameEntity AddStartProjectileSpeed(float newValue) {
        var index = GameComponentsLookup.StartProjectileSpeed;
        var component = (Code.Gameplay.Towers.StartProjectileSpeed)CreateComponent(index, typeof(Code.Gameplay.Towers.StartProjectileSpeed));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceStartProjectileSpeed(float newValue) {
        var index = GameComponentsLookup.StartProjectileSpeed;
        var component = (Code.Gameplay.Towers.StartProjectileSpeed)CreateComponent(index, typeof(Code.Gameplay.Towers.StartProjectileSpeed));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveStartProjectileSpeed() {
        RemoveComponent(GameComponentsLookup.StartProjectileSpeed);
        return this;
    }
}
